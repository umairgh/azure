{

  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {
    "apiVersion": {
        "type": "string",
        "defaultValue": "2015-06-15",
        "metadata": {
          "description": ""
        }
    },
    "deploymentPrefix":{
      "type": "string",
      "defaultValue": "sd_",
      "metadata": {
        "description": ""
      }
    },
    "frontEndSubnetNamePrefix":{
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": ""
      }
    },
    "backEndSubnetNamePrefix":{
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": ""
      }
    },
    "availabilitySetName":{
      "type": "string",
      "defaultValue": "AS",
      "metadata": {
        "description": ""
      }
    },
    "virtualNetworkName":{
      "type": "string",
      "defaultValue": "VN",
      "metadata": {
        "description": ""
      }
    },
    "faultDomainCount":{
      "type": "string",
      "defaultValue": "3",
      "metadata": {
        "description": ""
      }
    },
    "updateDomainCount":{
      "type": "string",
      "defaultValue": "5",
      "metadata": {
        "description": ""
      }
    },
    "addressPrefix":{
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": ""
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "With Standard_LRS as default two Storage account Types Standard_LRS and Premium_LRS available."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "[parameters('deploymentPrefix')]",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }

    },
    "publicIPType": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Static",
        "Dynamic"
      ],
      "defaultValue": "Dynamic",
      "metadata": {
        "description": "Public facing IP Type."
      }
    }
  },

  "variables": {
    "scriptsBaseUrl": "",
    "apiVersion": "[parameters('apiVersion')]",

    "availabilitySetName": "[concat(parameters('deploymentPrefix'), parameters('availabilitySetName'))]",
    "faultDomainCount": "[parameters('faultDomainCount')]",
    "updateDomainCount": "[parameters('updateDomainCount')]",
    "virtualNetworkName": "[concat(parameters('deploymentPrefix'), parameters('virtualNetworkName'))]",
    "addressPrefix": "[parameters('addressPrefix')]",
    "frontEndSubnetName": "[concat(parameters('deploymentPrefix'), 'FrontEnd')]",
    "backEndSubnetName": "[concat(parameters('deploymentPrefix'),'BackEnd')]",
    "frontEndSubnetNamePrefix": "[parameters('frontEndSubnetNamePrefix')]",
    "backEndSubnetNamePrefix": "[parameters('backEndSubnetNamePrefix')]",
    "publicIPName": "[concat(parameters('deploymentPrefix'),'PublicIP')]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPName'))]",
    "vnetRef": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetBackEndRef": "[concat(variables('vnetRef'),'/subnets/',variables('backEndSubnetName'))]",
    "FrontEndRef": "[concat(variables('vnetRef'),'/subnets/',variables('frontEndSubnetName'))]",


    "newStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'stg')]",
    "storageRef": "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]"
  },


  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('frontEndSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('frontEndSubnetNamePrefix')]"
            }
          },
          {
            "name": "[variables('backEndSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('backEndSubnetNamePrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('vnetRef')]"

      ],
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('DNSNameLB')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformFaultDomainCount": "[variables('faultDomainCount')]",
        "PlatformUpdateDomainCount": "[variables('updateDomainCount')]"

      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    }
    ],

  "outputs": {
    "sshResourceURL": {
      "value": "[concat('SSH Url to Ansible Controller:',parameters('adminUsername'),'@', reference(variables('publicIPRef'),providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn,' -p ',variables('sshNatRuleFrontEndPort'))]",
      "type": "string"
    }
  }

}
